name: Vercel production deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    tags:
      - "prod-v*"
      - "staging-v*"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install Dependencies
        run: bun install
      - name: Build Project
        run: bunx nitro build
  deployment:
    if: startsWith(github.ref, 'refs/tags/')
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Deployment Environment
        id: set-env
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          if [[ "$TAG_NAME" == staging-v* ]]; then
            echo "DEPLOY_ENV=staging" >> $GITHUB_ENV
          elif [[ "$TAG_NAME" == prod-v* ]]; then
            echo "DEPLOY_ENV=production" >> $GITHUB_ENV
          else
            echo "Invalid tag format. Exiting."
            exit 1
          fi

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install Vercel CLI
        run: bun install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ env.DEPLOY_ENV }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: |
          if [[ "${{ env.DEPLOY_ENV }}" == "production" ]]; then
            vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel build --token=${{ secrets.VERCEL_TOKEN }}
          fi

      - name: Deploy Project Artifacts to Vercel
        run: |
          if [[ "${{ env.DEPLOY_ENV }}" == "production" ]]; then
            vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi
